/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author : Brenda (github.com/lagom-QB)
title  : Porfolio scene
*/

import React, { useEffect, useRef } from "react";
import { RoundedBox, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

import * as THREE from "three";
import { CircleGeometry, MeshBasicMaterial } from "three";

const Flame = ({radius = .75, speed=.6, ...props}) => {
  const ref = useRef();
  useFrame((currState) => {
    const time = currState.clock.getElapsedTime();

    ref.current.position.y = Math.cos(time/10 * speed) * radius + 1.5;
    ref.current.scale.x = ref.current.scale.z = ref.current.scale.y = Math.sin(time * speed) * 0.5 + 1;
  })
  const { materials } = useGLTF("assets/base04.glb");

  return (<group {...props}>
        <mesh ref={ref} material={materials["Light Emittor2"]} >
          <sphereGeometry />
          <meshStandardMaterial 
            color="#FFEB3B" 
            emissive="#FFEB3B" 
            emissiveIntensity={1} 
            side={THREE.BackSide} />
        </mesh>
  </group>)
}
const Ocean = () => {
  const radius = 10;
  const segments = 64;

  const geometry = new CircleGeometry(radius, segments);
  const material = new MeshBasicMaterial({ color: 0x6591C9 });

  return (
    <mesh 
      castShadow 
      receiveShadow 
      name={"water"} 
      geometry={geometry} 
      position={[0, 5.52104774, 0]} 
      material={material} 
      rotation-x={-Math.PI / 2} 
      scale={2.5*0.15631819}>
      <meshBasicMaterial attach="material" color={0x6591C9} />
    </mesh>
  );
};

export default function ModelActual({ ...props }) {
  const groupRef = useRef(),
        { nodes, materials } = useGLTF("assets/base04.glb");

        useEffect(() => {
          groupRef.current.frustumCulled = false; // This is needed for the object to be visible before the camera renders it
        }, []);

        // const [openCheck, setOpenCheck] = useState(true);
        /** TODO:
         **** I want to add a saucer to make it more posh
         **** I want to rotate the top ball to open and close it
         * - For the Data Science projects, create a parralax scrolling effect 
         * on the circular table
         * - For the Design projects, add the project names on the lily pads
        */

  return (
    <group ref={groupRef} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Bottom_Ball"
          position={[0, 4.81046867, 0]}
          scale={4.1512413}
          userData={{ name: "Bottom Ball" }}
        >
          <mesh
            name="Sphere"
            castShadow
            receiveShadow
            geometry={nodes.Sphere.geometry}
            material={materials["Straw Material"]}
            material-color={0x8B4513}
          />
          <mesh
            name="Bottom_Cup"
            castShadow
            receiveShadow
            geometry={nodes.Sphere_1.geometry}
            //material={materials["Semi See-through Material"]}
            material-color={0xFAB9A0}
          />
        </group>
        <group
          name="Top_Ball"
          position={[3.17549682, 10.53186798, 0]}
          rotation={[0, 0, -1.6473374]}
          scale={[1.08380508, 1, 1.08380508]}
          userData={{ name: "Top Ball" }}
        >
          <mesh
            name="Bulb_transparent"
            castShadow
            receiveShadow
            geometry={nodes.Bulb_transparent.geometry}
            material={materials["Wooden Brown"]}
            material-color={0xFAB9A0}
          />
          <mesh
            name="Bulb_transparent_1"
            castShadow
            receiveShadow
            geometry={nodes.Bulb_transparent_1.geometry}
            material={materials["See through glass"]}
            material-color={0x7B5513}
          />
          <mesh
            name="Bulb_transparent_2"
            castShadow
            receiveShadow
            geometry={nodes.Bulb_transparent_2.geometry}
            material={materials["Light Emittor1"]}
          />
          <mesh
            name="Bulb_transparent_3"
            castShadow
            receiveShadow
            geometry={nodes.Bulb_transparent_3.geometry}
            material={materials["Light Emittor1"]}
          />
          <mesh
            name="Bulb_transparent_4"
            castShadow
            receiveShadow
            geometry={nodes.Bulb_transparent_4.geometry}
            material={materials["Light Emittor2"]}
          />
          <mesh
            name="Bulb_transparent_5"
            castShadow
            receiveShadow
            geometry={nodes.Bulb_transparent_5.geometry}
            material={materials["Light Emittor3"]}
          />
          <mesh
            name="Top_Floors"
            castShadow
            receiveShadow
            geometry={nodes.Bulb_transparent_6.geometry}
            material-color={0x8A4A1A}
          />
        </group>
        <group
          name="Straw"
          position={[-1.47325194, 4.84000006, 0]}
          rotation={[0, 0, 0.32722461]}
          userData={{ name: "Straw" }}
        >
          <mesh
            name="Cylinder"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder.geometry}
            material={materials["Straw Material"]}
          />
          <mesh
            name="Cylinder_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder_1.geometry}
            material={materials["White Glossy"]}
            material-color={0xFFF9D6}
          />
        </group>
        <mesh
          name="Lilypads"
          castShadow
          receiveShadow
          geometry={nodes.Lilypads.geometry}
          material={materials.Ivy}
          position={[0, 5.9000001, 0]}
          userData={{ name: "Lilypads" }}
        />
        <mesh 
          name="Data_Science_Projects_box"
          position={[5.40099502, 13.07419258, -0.86047307]} 
          rotation={[1.56312582, 0.00117953, 1.59867503]}
          scale={1.13}
          material={materials["Straw Material"]}
          material-color={0x8B4513}>
          <RoundedBox args={[1, .35, .8]} radius={.02} smoothness={2} creaseAngle={.4}>
            <meshPhongMaterial color={0x8B4513} />
          </RoundedBox>
        </mesh>
        <mesh
          name="Design_Projects_Txt"
          castShadow
          receiveShadow
          geometry={nodes.Design_Projects_Txt.geometry}
          material={materials["Light Emittor1"]}
          position={[-4.33274395, 7.25333977, -0.38767344]}
          rotation={[1.57387865, 0.06407873, -1.58467462]}
          userData={{ name: "Design Projects Txt" }}
        />
        {/* Todo::
        - If the top ball is open show:
           * the Ivys 
           * the Ocean
           * The Flames
           * The Shelves
           * The Books
           * The SignPost */}
        <group
          name="Top_Ball_Innards"
          // Check if the top ball is open or not. If it is, set visible to true else false
          // visible={openCheck? true : false}
        >
          <group
            name="Ivys">
            <mesh
              name="IvyLeaf"
              castShadow
              receiveShadow
              geometry={nodes.IvyLeaf.geometry}
              material={materials.Ivy}
              userData={{ name: "IvyLeaf" }}
            />
            <mesh
              name="IvyLeaf002"
              castShadow
              receiveShadow
              geometry={nodes.IvyLeaf002.geometry}
              material={materials.Ivy}
              userData={{ name: "IvyLeaf.002" }}
            />
            <mesh
              name="IvyLeaf003"
              castShadow
              receiveShadow
              geometry={nodes.IvyLeaf003.geometry}
              material={materials.Ivy}
              userData={{ name: "IvyLeaf.003" }}
            />
            <mesh
              name="IvyLeaf004"
              castShadow
              receiveShadow
              geometry={nodes.IvyLeaf004.geometry}
              material={nodes.IvyLeaf004.material}
              userData={{ name: "IvyLeaf.004" }}
            />
            <mesh
              name="IvyLeaf006"
              castShadow
              receiveShadow
              geometry={nodes.IvyLeaf006.geometry}
              material={materials.Ivy}
              userData={{ name: "IvyLeaf.006" }}
            />
          </group>
          <Ocean 
            geometry={nodes.Water.geometry} 
            material={materials["Water"]} 
            scale={0.15131819}/>
          <Flame position={[2.15499502, 7.66419258, -0.952047307]} scale={.2} speed={6.95} />
          <Flame position={[2.15499502, 7.66419258,  1.052047307]} scale={.2} speed={6.95} />
          <mesh
            name="Books"
            castShadow
            //receiveShadow
            geometry={nodes.Books.geometry}
            material={nodes.Books.material}
            material-color={0xFAFAEE}
            position={[5.69425631, 12.19300682, 1.63717985]}
            rotation={[-Math.PI, 0.59480242, -Math.PI]}
            scale={[0.11907482, 0.14755484, 0.02771751]}
            userData={{ name: "Books" }}
          />
          <group
            name="Shelf"
            position={[5.56220484, 11.70702675, 1.99999972]}
            rotation={[-0.04848409, -0.69126922, -3.1413265]}
            scale={[0.32717115, 0.0106385, 0.60903889]}
            userData={{ name: "Shelf" }}
          >
            <mesh
              name="Shelf_1"
              castShadow
              receiveShadow
              geometry={nodes.Cube.geometry}
              material-color={0xFAB9A0}
            />
            <mesh
              name="Shelf_2"
              castShadow
              receiveShadow
              geometry={nodes.Cube_2.geometry}
              material-color={0xFAB9A0}
            />
            <mesh
              name="Shelf_3"
              castShadow
              receiveShadow
              geometry={nodes.Cube_1.geometry}
              material={materials["Light Emittor1"]}
            />
            <mesh
              name="Shelf_4"
              castShadow
              receiveShadow
              geometry={nodes.Cube_3.geometry}
              material={materials["Light Emittor2"]}
            />
            <mesh
              name="Shelf_Backboard"
              castShadow
              receiveShadow
              geometry={nodes.Cube_4.geometry}
              material={materials["Light Emittor4"]}
            />
          </group>
          <mesh
            name="Data_Science_Projects_txt"
            castShadow
            receiveShadow
            geometry={nodes.Data_Science_Projects_txt.geometry}
            position={[5.20499502, 13.26419258, -1.22047307]}
            rotation={[1.58212582, 0.00117953, 1.59867503]}
            scale={1.4}
            material={materials["Light Emittor1"]}
            userData={{ name: "Data Science Projects txt" }}
          >
            <meshStandardMaterial 
              color="white" 
              side={THREE.DoubleSide} />
            <meshStandardMaterial 
              color="#FFEB3B" 
              emissive="#FFEB3B" 
              emissiveIntensity={1} 
              side={THREE.BackSide} />
          </mesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("assets/base04.glb");

/**
 * <primitive
                  ref           = {ref}
                  scale         = {hovered? scale * 1.1 : scale}
                  onPointerOver = {(e) => setHover(true)}
                  onPointerOut  = {(e) => setHover(false)}
                >
 */